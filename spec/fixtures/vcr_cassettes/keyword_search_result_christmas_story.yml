---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=05946dc2dc50df636962153f45926dbe&page=1&query=christmas%20story
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.8.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 03 Dec 2021 00:04:26 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 4b2d2d4c49521bf403522140b78283a1.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - ujDjAv5sNU8Nv0DAV7limhc8Sw1ZqiUHMkjggiuUesUCAHXHIBKs5A==
      Age:
      - '72'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJwYWdlIjoxLCJyZXN1bHRzIjpbeyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvbVNjVkVrWTllSnlCT2Y4MUpFSFBiV1hKRXlxLmpwZyIsImdlbnJlX2lkcyI6WzM1LDEwNzUxXSwiaWQiOjg1MCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQSBDaHJpc3RtYXMgU3RvcnkiLCJvdmVydmlldyI6IlRoZSBjb21pYyBtaXNoYXBzIGFuZCBhZHZlbnR1cmVzIG9mIGEgeW91bmcgYm95IG5hbWVkIFJhbHBoLCB0cnlpbmcgdG8gY29udmluY2UgaGlzIHBhcmVudHMsIHRlYWNoZXJzLCBhbmQgU2FudGEgdGhhdCBhIFJlZCBSeWRlciBCLkIuIGd1biByZWFsbHkgaXMgdGhlIHBlcmZlY3QgQ2hyaXN0bWFzIGdpZnQgZm9yIHRoZSAxOTQwcy4iLCJwb3B1bGFyaXR5IjoxNC45MTMsInBvc3Rlcl9wYXRoIjoiL3FFNVpjSlFBMHRTRzFLQ2l5NEZ2MFc5MWRTNy5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTgzLTExLTE4IiwidGl0bGUiOiJBIENocmlzdG1hcyBTdG9yeSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjMsInZvdGVfY291bnQiOjg5Mn0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvdTZrUzlYOGRZR3AwVWNucWlqT3V2T1g5ZjFsLmpwZyIsImdlbnJlX2lkcyI6WzEwNDAyLDEwNzcwXSwiaWQiOjQ4NTUxNywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQSBDaHJpc3RtYXMgU3RvcnkgTGl2ZSEiLCJvdmVydmlldyI6IkEgbGl2ZSBicm9hZGNhc3Qgb2YgdGhlIEJyb2Fkd2F5IGhpdCBcIkEgQ2hyaXN0bWFzIFN0b3J5OiBUaGUgTXVzaWNhbFwiIGluIHdoaWNoIFJhbHBoaWUgd2lzaGVzIGZvciBub3RoaW5nIG1vcmUgdGhhbiBhIFJlZCBSaWRlciBCQiBHdW4gZm9yIENocmlzdG1hcy4iLCJwb3B1bGFyaXR5Ijo3LjYwOCwicG9zdGVyX3BhdGgiOiIvZHUwMTBmMmVvS09YcVo4VW8xaDV6bGtlNlNmLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTctMTItMTciLCJ0aXRsZSI6IkEgQ2hyaXN0bWFzIFN0b3J5IExpdmUhIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjQuOSwidm90ZV9jb3VudCI6MzF9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiLzFmaUZLcFZ2d256UTFGV1p2b3lKa1RwMlhRTS5qcGciLCJnZW5yZV9pZHMiOlszNV0sImlkIjoxMjU1MDQsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkEgQ2hyaXN0bWFzIFN0b3J5IDIiLCJvdmVydmlldyI6IlRoZSBvcmlnaW5hbCB0cmFkaXRpb25hbCBvbmUtaHVuZHJlZC1wZXJjZW50IHJlZC1ibG9vZGVkIHR3by1maXN0ZWQgYWxsLUFtZXJpY2FuIENocmlzdG1hcyBjb250aW51ZXMgZml2ZSB5ZWFycyBsYXRlciB3aXRoIFJhbHBoaWUsIFJhbmR5LCBtb20gYW5kIHRoZSBvbGQgbWFuLiBUaGlzIHRpbWUgUmFscGhpZSBoYXMgaGlzIGV5ZXMgZml4ZWQgb24gYSBjYXIuIEJ1dCB0cm91YmxlIGlzIHN1cmUgdG8gZm9sbG93LiIsInBvcHVsYXJpdHkiOjYuODY3LCJwb3N0ZXJfcGF0aCI6Ii9lQm05WWk4WVJ4ZGNJZzdtYk9pS1RkWDBHMjguanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxMi0wOS0wNiIsInRpdGxlIjoiQSBDaHJpc3RtYXMgU3RvcnkgMiIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo1LjEsInZvdGVfY291bnQiOjM3fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii8yUkRCNERSV3dHWUpMNzl1MWxTNUlaalJZTEMuanBnIiwiZ2VucmVfaWRzIjpbMzUsMThdLCJpZCI6NTY3Mjk2LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgTGVhc3Qgb2YgVGhlc2U6IEEgQ2hyaXN0bWFzIFN0b3J5Iiwib3ZlcnZpZXciOiJBIGNoYXJtaW5nIENocmlzdG1hcyB0YWxlIG9mIGhvcGUsIGZvcmdpdmVuZXNzIGFuZCBmYWl0aCB0aGF0IGNlbnRlcnMgYXJvdW5kIGEgc2luZ2xlIG1vbSwgaGVyIHNldmVuIHllYXIgb2xkIGRhdWdodGVyIGFuZCBhIFNhbHZhdGlvbiBBcm15IFNhbnRhIENsYXVzLiIsInBvcHVsYXJpdHkiOjIuOTU3LCJwb3N0ZXJfcGF0aCI6Ii9zZGZxTXhuN2RGZVdQUXZyOUoxUW5LbU5mYzQuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxOC0xMC0yMiIsInRpdGxlIjoiVGhlIExlYXN0IG9mIFRoZXNlOiBBIENocmlzdG1hcyBTdG9yeSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo1LCJ2b3RlX2NvdW50Ijo0fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii95UUNpVFVENHY4NnV0R3FJZHpYZUlDNzVPc04uanBnIiwiZ2VucmVfaWRzIjpbMTA3NzAsMTgsMTA3NTFdLCJpZCI6MjM1NDk0LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJBIENvdW50cnkgQ2hyaXN0bWFzIFN0b3J5Iiwib3ZlcnZpZXciOiJBIHN0YXJyeS1leWVkIHlvdW5nIGdpcmwgam91cm5leXMgZnJvbSB0aGUgbW91bnRhaW5zIG9mIEFwcGFsYWNoaWEgdG8gdGhlIHN0YWdlIGF0IERvbGx5d29vZCwgd2hlcmUgc2hlIGRpc2NvdmVycyB0aGUgaW1wYWN0IG9mIEFmcmljYW4tQW1lcmljYW5zIG9uIHRoZSB3b3JsZCBvZiBjb3VudHJ5IG11c2ljIC0gd2hpbGUgYXQgdGhlIHNhbWUgdGltZSBjb21wZXRpbmcgaW4gYSBjb3VudHJ5IG11c2ljIGNvbXBldGl0aW9uIGZvciBraWRzLCBob3N0ZWQgYnkgRG9sbHkgUGFydG9uIGhlcnNlbGYuIiwicG9wdWxhcml0eSI6Mi45NTQsInBvc3Rlcl9wYXRoIjoiL3F1V1VvRFFiOHZsQW00aTdSZnVrYnZtdU92SS5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDEzLTExLTA5IiwidGl0bGUiOiJBIENvdW50cnkgQ2hyaXN0bWFzIFN0b3J5IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjUuMiwidm90ZV9jb3VudCI6MTB9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL3JYVWVwNXgyYW4zMkIwbmpVaWhKSHk2NVREcC5qcGciLCJnZW5yZV9pZHMiOlsyNywxNF0sImlkIjozMTE1MzksIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkEgQ2hyaXN0bWFzIEhvcnJvciBTdG9yeSIsIm92ZXJ2aWV3IjoiQ2hyaXN0bWFzIGlzIHN1cHBvc2VkIHRvIGJlIGEgdGltZSBvZiBqb3ksIHBlYWNlIGFuZCBnb29kd2lsbC4gQnV0IGZvciBzb21lIGZvbGtzIGluIHRoZSBzbWFsbCB0b3duIG9mIEJhaWxleSBEb3ducywgaXQgdHVybnMgaW50byBzb21ldGhpbmcgbXVjaCBsZXNzIGZlc3RpdmUuIiwicG9wdWxhcml0eSI6MTEuODQ3LCJwb3N0ZXJfcGF0aCI6Ii9xZHp6RmhvMXdaRnZyREZjZGcycjN3d01VU0ouanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxNS0wNy0yMCIsInRpdGxlIjoiQSBDaHJpc3RtYXMgSG9ycm9yIFN0b3J5IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjUuOCwidm90ZV9jb3VudCI6MjMxfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii83Z28yMjZyM3ltT2NoZFp6VkhCemhEMk9yS3MuanBnIiwiZ2VucmVfaWRzIjpbMzVdLCJpZCI6NTQzNzQ1LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJBIFJhdW5jaHkgQ2hyaXN0bWFzIFN0b3J5Iiwib3ZlcnZpZXciOiJEYXZlIHNlZW1zIGRvb21lZCB0byBhIGxvbmVseSBsaWZlIG9mIGVhdGluZyByYW1lbiBub29kbGVzIGFsb25lIG9uIEZyaWRheSBuaWdodHMgZm9yZXZlciwgYnV0IENocmlzdG1hcyBtYWdpYyBpcyBhZm9vdC4gQW5kIG5vIFJ1c3NpYW4gc3BpZXMsIGRpc2dydW50bGVkIGJvc3Nlcywgb3IgaG9ybnkgYmFrZXJ5IHNjaWVudGlzdHMgY2FuIGRlZmVhdCB0aGUgWXVsZXRpZGUgc3Bpcml0LiBTZXgsIGxpZXMsIGFuZCBtb3JlIHNleCwgdGhlIHRoaW5ncyB0aGF0IG1ha2UgQ2hyaXN0bWFzIGdyZWF0LiIsInBvcHVsYXJpdHkiOjIuMTQyLCJwb3N0ZXJfcGF0aCI6Ii95aXNicG9aT2ZKTW1nUEljZHltbENydHE2OHMuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxOC0wOC0xOSIsInRpdGxlIjoiQSBSYXVuY2h5IENocmlzdG1hcyBTdG9yeSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LCJ2b3RlX2NvdW50IjozfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiZ2VucmVfaWRzIjpbMTA3NzAsMTA3NTFdLCJpZCI6NDQ0MTgsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkJlbmppJ3MgVmVyeSBPd24gQ2hyaXN0bWFzIFN0b3J5Iiwib3ZlcnZpZXciOiJXaGlsZSBvbiBhIHB1YmxpY2l0eSB0b3VyIGluIFN3aXR6ZXJsYW5kLCBCZW5qaSwgQ2luZHkgU21pdGgsIGFuZCBQYXRzeSBHYXJyZXR0IGNvbnZpbmNlIEtyaXMgS3JpbmdsZSB0aGF0IGhpcyBwbGFjZSBvbiBDaHJpc3RtYXMgRXZlIGlzIGRlbGl2ZXJpbmcgcHJlc2VudHMgdG8gYWxsIFwiaGlzXCIgZmFtaWxpZXMgYWxsIG92ZXIgdGhlIHdvcmxkLiIsInBvcHVsYXJpdHkiOjEuOTMyLCJwb3N0ZXJfcGF0aCI6Ii9xRlpMSUt0Wjk3N3p3MzFzT0JXZmJqeUVONWsuanBnIiwicmVsZWFzZV9kYXRlIjoiMTk3OC0xMi0wNyIsInRpdGxlIjoiQmVuamkncyBWZXJ5IE93biBDaHJpc3RtYXMgU3RvcnkiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6NC4xLCJ2b3RlX2NvdW50Ijo3fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9hRzltUGJoVTZ4UjRFY1N1YXVrY3AzS0VJTEouanBnIiwiZ2VucmVfaWRzIjpbMzUsMTA0MDIsMTA3NDksMTRdLCJpZCI6NjA2MTE3LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJBIENpbmRlcmVsbGEgU3Rvcnk6IENocmlzdG1hcyBXaXNoIiwib3ZlcnZpZXciOiJLYXQgaXMgYW4gYXNwaXJpbmcgc2luZ2VyLXNvbmd3cml0ZXIgd2hvIGRyZWFtcyBvZiBtYWtpbmcgaXQgYmlnLiBIb3dldmVyLCBoZXIgZHJlYW1zIGFyZSBzdGFsbGVkIGJ5IGhlciByZWFsaXR5OiBhIGNvbm5pdmluZyBhbmQgY3J1ZWwgc3RlcGZhbWlseSAgYW5kIGEgZGVtb3JhbGl6aW5nIGpvYiB3b3JraW5nIGFzIGEgc2luZ2luZyBlbGYgYXQgYmlsbGlvbmFpcmUgVGVycmVuY2UgV2ludGVyZ2FyZGVu4oCZcyBTYW50YSBMYW5kLiIsInBvcHVsYXJpdHkiOjMxLjkwMywicG9zdGVyX3BhdGgiOiIvb3pCWDB1NWNhYUpGbGk5QXNzcUptQVJiNVIuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxOS0xMC0xNSIsInRpdGxlIjoiQSBDaW5kZXJlbGxhIFN0b3J5OiBDaHJpc3RtYXMgV2lzaCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjUsInZvdGVfY291bnQiOjU0OH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvZFVtazcyZHkyVDVyT2hGZVhVVHlkMGJNYkJULmpwZyIsImdlbnJlX2lkcyI6WzE4LDEwNzUxLDEwNzcwXSwiaWQiOjU2MzA4LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgSG9tZWNvbWluZzogQSBDaHJpc3RtYXMgU3RvcnkiLCJvdmVydmlldyI6IlRoZSBXYWx0b24gZmFtaWx5IGlzIHByZXBhcmluZyBmb3IgQ2hyaXN0bWFzIGluIHRoZSBlYXJseSAxOTMwcy4gSXQncyBDaHJpc3RtYXMgRXZlLCBhbmQgdGhleSBhcmUgd2FpdGluZyBmb3IgRGFkZHkgV2FsdG9uIHRvIGNvbWUgaG9tZSBmcm9tIGhpcyBqb2IgaW4gdGhlIGNpdHkgc29tZSA1MCBtaWxlcyBhd2F5LiBTaW5jZSBoZSBpcyBsYXRlLCBldmVyeW9uZSBpcyB3b3JyaWVkIGFuZCBvdmVyIHRoZSByYWRpbyB0aGUgbW90aGVyIGFuZCBncmFuZHBhcmVudHMgaGVhciBhYm91dCBhbiBvdmVydHVybmVkIGJ1cyBhbmQgaHVydCB0cmF2ZWxlcnMgYnV0IGtlZXAgdGhpcyBuZXdzIGZyb20gdGhlIHJlc3Qgb2YgdGhlIGZhbWlseS4gVGhlIHN0b3J5IGlzIHJlYWxseSBhIGNvbWluZyBvZiBhZ2Ugc3RvcnkgYWJvdXQgdGhlIG9sZGVzdCBzb24gSm9obi1Cb3kgd2hvIG11c3QgY3V0IGRvd24gdGhlIHRyZWUgd2l0aCBoaXMgZ3JhbmRmYXRoZXIgc2luY2UgaGlzIGZhdGhlciBpc24ndCBob21lIGFuZCBpcyBldmVudHVhbGx5IHRvbGQgYWJvdXQgaGlzIG1pc3NpbmcgZmF0aGVyIGFuZCBzZXRzIG91dCB0byBmaW5kIGhpbS4gQW4gYWxsIHJvdW5kIGhlYXJ0d2FybWluZyBzdG9yeSwgZXNwZWNpYWxseSBpZiB5b3UgYXJlIGEgZmFuIG9mIFRoZSBXYWx0b25zLiBBIHNpbXBsZSBzdG9yeSBhYm91dCBhIHNpbXBsZSBmYW1pbHkgaW4gc2ltcGxlIHRpbWVzLiBHcmVhdCBmYW1pbHkgZW50ZXJ0YWlubWVudCEiLCJwb3B1bGFyaXR5IjoyLjE1NywicG9zdGVyX3BhdGgiOiIvd2NYSTc5RGpGVGhYc3k0WWNKYVRsNlBWV0Z1LmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5NzEtMTItMTkiLCJ0aXRsZSI6IlRoZSBIb21lY29taW5nOiBBIENocmlzdG1hcyBTdG9yeSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo4LjIsInZvdGVfY291bnQiOjEwfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii92c2VKYVE1SmFkSTZkQVRvZGlNSFhHbWZrN00uanBnIiwiZ2VucmVfaWRzIjpbMzUsMTgsMTA3NTEsMTZdLCJpZCI6NTAwNjQsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkEgQ2hyaXN0bWFzIFN0b3J5Iiwib3ZlcnZpZXciOiJUaGUgc3BlY2lhbCBpcyBzZXQgaW4gYSB0b3duIGFsbW9zdCBsaWtlIGluIERpc25leSdzIExhZHkgYW5kIHRoZSBUcmFtcCwgYW5kIGl0IHdhcyBDaHJpc3RtYXMgRXZlLiBJbiBvbmUgaG91c2UsIGEgbGl0dGxlIGJveSBuYW1lZCBUaW1teSB3YXMgcmVhZCBhIENocmlzdG1hcyBzdG9yeSBhbmQgdHVja2VkIGludG8gYmVkLiBUaGUgcmVzaWRlbnQgbW91c2UgR3VtZHJvcCAsIHdoaWxlIGFkbWlyaW5nIHRoZSBob3VzZSBhbGwgZGVjb3JhdGVkIGZvciBDaHJpc3RtYXMsIG5vdGljZWQgVGltbXkncyBsZXR0ZXIgdG8gU2FudGEgb24gdGhlIGZsb29yLiBUaGUgbGV0dGVyIG11c3Qgb2YgaGF2ZSBmYWxsZW4gb2ZmIHRoZSB0YWJsZSBhbmQgbmV2ZXIgZ290IG1haWxlZC4gU28gaGUgYW5kIHRoZSBmYW1pbHkgZG9nIEdvYmJlciBzZXQgb3V0c2lkZSB0byBkZWxpdmVyIHRoZSBsZXR0ZXIgdG8gU2FudGEgYW5kIHNhdmUgQ2hyaXN0bWFzIGZvciBUaW1teS4iLCJwb3B1bGFyaXR5IjoxLjE2MSwicG9zdGVyX3BhdGgiOiIvalV2aGJFQmJBVFF2U2hHdlFlYzJCYWJPQzNjLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5NzItMTItMDEiLCJ0aXRsZSI6IkEgQ2hyaXN0bWFzIFN0b3J5IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYsInZvdGVfY291bnQiOjF9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiLzZ3Rm9vZ0hOT0JLdVR4aVJQbzh1cnBEWGNTdC5qcGciLCJnZW5yZV9pZHMiOlsxNl0sImlkIjozNzc0MSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGhlIENocmlzdG1hcyBTdG9yeSBLZWVwZXJzIiwib3ZlcnZpZXciOiJJdCBpcyB0aGUgZWFybHkgeWVhcnMgb2YgQ2hyaXN0aWFuaXR5LCBhbmQgRW1wZXJvciBOZXJvIGlzIGhlbGxiZW50IG9uIGRlc3Ryb3lpbmcgdGhlIGxvdCBvZiB0aGVtLiBDYXVnaHQgdXAgYW1vbmdzdCB0aGUgY2hhb3MgYXJlIHRoZSBob21lbGVzcyBvcnBoYW5zIG9mIFJvbWUgZmxlZWluZyBmcm9tIHRoZSBmaXJlcyBOZXJvIGlzIHN0YXJ0aW5nIHRvIHBlcnNlY3V0ZSB0aGUgQ2hyaXN0aWFucy4gVGhlIG9ycGhhbnMgZmluZCB0aGVpciB3YXkgdG8gQmVuIGFuZCBIZWxlbmEsIHNlY3JldCBDaHJpc3RpYW4gbGVhZGVycyBpbiBSb21lIHdobyBhcmUgdGhlIFwiU3Rvcnkga2VlcGVyc1wiIG9mIHRoZSB0YWxlcyBvZiBKZXN1cy4gV2l0aCB0aGVpciBoZWxwLCB0aGV5IGZsZWUgdGhlIGJ1cm5pbmcgY2l0eSBhbmQgaGVhZCBvdXQgdG8gYSBzYWZlIGhhdmVuIGZvciB0aGUgQ2hyaXN0aWFucy4gQWxvbmcgdGhlIHdheSwgdGhleSBtZWV0IHVwIHdpdGggY29sb3JmdWwgY2hhcmFjdGVycyBvZiBhbGwgd2Fsa3Mgb2YgbGlmZSB3aGlsZSBsZWFybmluZyBhYm91dCB0aGUgbGlmZSBvZiBKZXN1cy4iLCJwb3B1bGFyaXR5IjoxLjIzMywicG9zdGVyX3BhdGgiOiIveVdWNGZZZGs2UmcyemVFMVFNSk9MY0xYTE14LmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5OTgtMDctMDEiLCJ0aXRsZSI6IlRoZSBDaHJpc3RtYXMgU3RvcnkgS2VlcGVycyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo0LjUsInZvdGVfY291bnQiOjN9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOltdLCJpZCI6NTY2NDM1LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJEb3VnJ3MgQ2hyaXN0bWFzIFN0b3J5Iiwib3ZlcnZpZXciOiJXaGVuIFBvcmtjaG9wIGhhcyBiZWVuIG1pc3Rha2VubHkgYWNjdXNlZCBvZiBhdHRhY2tpbmcgQmVlYmUsIERvdWcgaGFzIHRvIHRyeSBhbmQgY2xlYXIgaGlzIGJlc3Qgbm9uLWh1bWFuIGZyaWVuZCBvdXQuIiwicG9wdWxhcml0eSI6MC42LCJwb3N0ZXJfcGF0aCI6bnVsbCwicmVsZWFzZV9kYXRlIjoiIiwidGl0bGUiOiJEb3VnJ3MgQ2hyaXN0bWFzIFN0b3J5IiwidmlkZW8iOnRydWUsInZvdGVfYXZlcmFnZSI6MCwidm90ZV9jb3VudCI6MH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6WzE2XSwiaWQiOjY0OTYxMiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiTGl0dGxlIFdvbWVuJ3MgQ2hyaXN0bWFzIFN0b3J5Iiwib3ZlcnZpZXciOiJXaGlsZSB0aGUgc2lzdGVycyB0cnkgdG8gYWRqdXN0IHRvIHRoZWlyIEZhdGhlciBub3QgYmVpbmcgaG9tZSBmb3IgQ2hyaXN0bWFzLCBkdWUgdG8gc2VydmluZyBpbiB0aGUgQ2l2aWwgV2FyLCBKbyBhdHRlbXB0cyB0byBmaW5pc2ggaGVyIENocmlzdG1hcyBwbGF5LiBBdCB0aGUgc2FtZSB0aW1lLCBzaGUgdHJpZXMgdG8gYmVjb21lIGJldHRlciBhY3F1YWludGVkIHdpdGggdGhlaXIgbmVpZ2hib3IsIExhdXJpZSwgd2hvIGFsc28gaGVscHMgdGhlbSB0byBmaW5kIGEgc3VpdGFibGUgQ2hyaXN0bWFzIFRyZWUuIiwicG9wdWxhcml0eSI6MC44NCwicG9zdGVyX3BhdGgiOiIvOXkyTXNLdkxZM1psSlZmOWhRaWNYajkwbjJhLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5OTItMDgtMTUiLCJ0aXRsZSI6IkxpdHRsZSBXb21lbidzIENocmlzdG1hcyBTdG9yeSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjowLCJ2b3RlX2NvdW50IjowfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiZ2VucmVfaWRzIjpbXSwiaWQiOjU3NTA1Miwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGhlIENocmlzdG1hcyBTdG9yeSIsIm92ZXJ2aWV3IjoiSW1hZ2VzIG9mIENocmlzdG1hcyBsaWdodHMgYXQgbmlnaHQsIGEgZ3JvdXAgb2YgYmF0b24tdHdpcmxlcnMgaW4gdGhlIHN0cmVldCwgcG9zdGFsIGNhcnJpZXJzLCBraWRzIHdhbGtpbmcgZG93biB0aGUgc3RyZWV0LCBldGMuIEV4YWN0IGRhdGUgb2YgcHJvZHVjdGlvbiB1bmtub3duLiIsInBvcHVsYXJpdHkiOjAuNiwicG9zdGVyX3BhdGgiOm51bGwsInJlbGVhc2VfZGF0ZSI6IjE5NzQtMDEtMDEiLCJ0aXRsZSI6IlRoZSBDaHJpc3RtYXMgU3RvcnkiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6MCwidm90ZV9jb3VudCI6MH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvYW44MVBSTmxwZ1NPdnBNenJiOVFLQVJIMTJlLmpwZyIsImdlbnJlX2lkcyI6WzEwNzQ5LDEwNzcwXSwiaWQiOjYyNjMxMywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQSBDaHJpc3RtYXMgTG92ZSBTdG9yeSIsIm92ZXJ2aWV3IjoiQSB5b3V0aCBjaG9pciBkaXJlY3RvciBuZWVkcyB0byB3cml0ZSBhIGJpZyBzb25nIGZvciB0aGUgQ2hyaXN0bWFzIEV2ZSBzaG93IGJ1dCBmaW5kcyBoZXJzZWxmIGRpc3RyYWN0ZWQgd2hlbiBhIGJveSB3aXRoIGEgZ29sZGVuIHZvaWNlIGpvaW5zIGhlciBjaG9pciwgd2hpY2ggd2lsbCBjb21lIGFzIG5ld3MgdG8gaGlzIHdpZG93ZWQgZmF0aGVyLiIsInBvcHVsYXJpdHkiOjMuNjM3LCJwb3N0ZXJfcGF0aCI6Ii91Q2tnemExZXlIbkszVEZ6THdydnZWZjhwMjIuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxOS0xMi0wNyIsInRpdGxlIjoiQSBDaHJpc3RtYXMgTG92ZSBTdG9yeSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjksInZvdGVfY291bnQiOjE4fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii81WHY2eEV1NlRhRXhpRWtsS1F4VUlncDlxVjUuanBnIiwiZ2VucmVfaWRzIjpbMThdLCJpZCI6MTUzOTE4LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgR2lmdCBvZiBMb3ZlOiBBIENocmlzdG1hcyBTdG9yeSIsIm92ZXJ2aWV3IjoiQWZ0ZXIgZXhwZXJpZW5jaW5nIHNldmVyYWwgc3RyZXNzZnVsIHNpdHVhdGlvbnMgd2l0aGluIGEgc2hvcnQgdGltZSAtLWluY2x1ZGluZyB0aGUgZmFpbHVyZSBvZiB0aGUgZmFtaWx5IGJ1c2luZXNzIGFuZCB0aGUgbG9zcyBvZiBoZXIgbW90aGVyLS0gSmFuZXQgQnJvZGVyaWNrIGJlY29tZXMgaWxsLiBGYWxsaW5nIGludG8gYSBkZWVwIHNsZWVwLCBzaGUgZHJlYW1zIG9mIHJldHVybmluZyB0byBoZXIgaG9tZXRvd24sIHRha2luZyBoZXIgY2hpbGRyZW4gd2l0aCBoZXIgdG8gbWVldCBoZXIgZGVjZWFzZWQgbG92ZWQgb25lcy4gUGVyaGFwcywgZHVyaW5nIGEgQ2hyaXN0bWFzIHJldW5pb24gd2l0aCBoZXIgYmVsb3ZlZCBmYW1pbHksIHNoZSB3aWxsIGZpbmQgdGhlIGFuc3dlciB0byBjb3Bpbmcgd2l0aCBoZXIgdHJvdWJsZXMuIiwicG9wdWxhcml0eSI6MS41NzUsInBvc3Rlcl9wYXRoIjpudWxsLCJyZWxlYXNlX2RhdGUiOiIxOTgzLTEyLTIwIiwidGl0bGUiOiJUaGUgR2lmdCBvZiBMb3ZlOiBBIENocmlzdG1hcyBTdG9yeSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LCJ2b3RlX2NvdW50IjoxfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii81OUVNYjUwVGJpd3k3SUxYUXlRWHlZR2ltN0cuanBnIiwiZ2VucmVfaWRzIjpbMTgsNTNdLCJpZCI6NDc2OTE5LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJDaHJpc3RtYXMgQ3JpbWUgU3RvcnkiLCJvdmVydmlldyI6IkEgYm90Y2hlZCBDaHJpc3RtYXMgRXZlIHJvYmJlcnkgbGVhZHMgZG93biBhIGRlc3RydWN0aXZlIHBhdGggZm9yIGEgcG9saWNlIG9mZmljZXIgcmVjb25uZWN0aW5nIHdpdGggaGlzIGVzdHJhbmdlZCBtb3RoZXIsIGEgY29taW5nLWFwYXJ0LWF0LXRoZS1zZWFtcyBhbWF0ZXVyIHBob3RvZ3JhcGhlciwgaGlzIHZpbmRpY3RpdmUgYW5kIG11cmRlcm91cyBmaWFuY2VlLCBoZXIgc2VjcmV0IGxvdmVyIGFuZCBhIHN0cnVuZy1vdXQgbWFsbCBTYW50YS4uLmFzIHRoZXkgYWxsIGNvbnZlcmdlIGluIG9uZSBleHBsb3NpdmUgYW5kIGRlYWRseSBuaWdodC4iLCJwb3B1bGFyaXR5IjoyLjE2NiwicG9zdGVyX3BhdGgiOiIvMk9Mc3FkU2VwOEhkVHVPbGxaOFhZWldoNUI5LmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTctMTAtMjQiLCJ0aXRsZSI6IkNocmlzdG1hcyBDcmltZSBTdG9yeSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo1LjMsInZvdGVfY291bnQiOjN9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjpudWxsLCJnZW5yZV9pZHMiOlsxOCwxMDc1MV0sImlkIjo0MTI0MDEsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkEgTm9ybWFuIFJvY2t3ZWxsIENocmlzdG1hcyBTdG9yeSIsIm92ZXJ2aWV3IjoiVGhpcyBmaWxtIGJyaW5ncyB0byBsaWZlIGEgZmFtb3VzIE5vcm1hbiBSb2Nrd2VsbCBwYWludGluZy4gU2FtdWVsIENhdmFuYXVnaCwgYSBTY3Jvb2dlIGxpa2UgY2hhcmFjdGVyLCByZXZpc2l0cyB0aGUgZnJvemVuIHBvbmQgZWFjaCB5ZWFyIHRvIHJlbGl2ZSB0aGUgaGFwcGllciBtb21lbnRzIGluIGhpcyBsaWZlLiBNaWNoYWVsIEdyYW50IGlzIGFuIHVuaGFwcHkgeW91bmcgYm95IGF0dGVtcHRpbmcgdG8gc2thdGUgd2l0aCBoaXMgZGFkJ3Mgb3ZlcnNpemVkIHNrYXRlcywgd2hvIHdhcyBtaXNzaW5nIGluIGFjdGlvbiBpbiBLb3JlYS4gVGhlaXIgcGF0aHMgY3Jvc3Mgc2V2ZXJhbCB0aW1lcyBhcyBvdXIgc3RvcnkgdW5mb2xkcy4iLCJwb3B1bGFyaXR5IjowLjg3NCwicG9zdGVyX3BhdGgiOm51bGwsInJlbGVhc2VfZGF0ZSI6IjE5OTUtMTItMjEiLCJ0aXRsZSI6IkEgTm9ybWFuIFJvY2t3ZWxsIENocmlzdG1hcyBTdG9yeSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LCJ2b3RlX2NvdW50IjoxfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6bnVsbCwiZ2VucmVfaWRzIjpbXSwiaWQiOjI0MTQ3MSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiVGhlIFVudG9sZCBDaHJpc3RtYXMgU3RvcnkiLCJvdmVydmlldyI6IkdvIGJlaGluZCB0aGUgc2NlbmVzIGZvciB0aGUgdW50b2xkIHN0b3J5IG9mIHdoYXQgcmVhbGx5IGhhcHBlbmVkIGluIGZyb250IGFuZCBiZWhpbmQgdGhlIGNhbWVyYXMgb2YgdGhlIG1vc3QgcG9wdWxhciBDaHJpc3RtYXMgbW92aWUgZXZlciBtYWRlLiAgTGVhcm4gaG93IHRoZSBhY3RvcnMgd2VyZSBjYXN0LCB0aGUgc2VjcmV0cyBiZWhpbmQgaG93IHlvdXIgZmF2b3JpdGUgc2NlbmVzIHdlcmUgc2hvdCAodGhlIFBpZ2d5IFNjZW5lLCBGbGFncG9sZSwgVGhlIEJ1bWJ1cyBEb2dzLCBTYW50YSdzIFNsaWRlLCBldGMpLCBzZWUgbmV2ZXItYmVmb3JlLXNlZW4gcGhvdG9zIHRha2VuIGJ5IHRoZSBjYXN0IGFuZCBjcmV3IGFuZCBsZWFybiB3aGF0IHNjZW5lcyB3ZXJlIGN1dCBvdXQgb2YgdGhlIGZpbG0uICBQbHVzIHdpdG5lc3MgaG93IG9uZSBtYW4ncyBkcmVhbSB0byBvcGVuIHRoZSBDaHJpc3RtYXMgU3RvcnkgSG91c2UgdG8gaXQncyBmYW5zLCBsZWFkIHRvIHRoZSBmaXJzdCBDaHJpc3RtYXMgU3RvcnkgQ29udmVudGlvbiBldmVyLiIsInBvcHVsYXJpdHkiOjAuNiwicG9zdGVyX3BhdGgiOm51bGwsInJlbGVhc2VfZGF0ZSI6IjIwMDgtMDEtMDEiLCJ0aXRsZSI6IlRoZSBVbnRvbGQgQ2hyaXN0bWFzIFN0b3J5IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjAsInZvdGVfY291bnQiOjB9XSwidG90YWxfcGFnZXMiOjMsInRvdGFsX3Jlc3VsdHMiOjQ3fQ==
  recorded_at: Fri, 03 Dec 2021 00:05:38 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=05946dc2dc50df636962153f45926dbe&page=2&query=christmas%20story
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.8.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 03 Dec 2021 00:04:26 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 4b2d2d4c49521bf403522140b78283a1.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - eaIQMogtmQcrD14oNQ5BA3zlO0ku7jBJS3-a3ofnpJhIZlSFpVB3Qg==
      Age:
      - '72'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 03 Dec 2021 00:05:38 GMT
recorded_with: VCR 6.0.0
